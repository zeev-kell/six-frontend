<template>
  <div class="container-fluid" style="overflow: inherit">
    <el-row v-if="blog.id" type="flex">
      <el-col style="width: 260px">
        <div class="card">
          <div class="card-header el-row el-row--flex is-align-middle py-5">
            <h4>作者</h4>
          </div>
          <div class="card-body">
            <div style="font-weight: 600; margin-bottom: 10px">{{ blog.provider }}</div>
          </div>
        </div>
      </el-col>

      <el-col class="marked-content el-col-equal">
        <div class="el-row el-row--flex is-align-middle py-2">
          <div class="el-col el-col-16 text-truncate mx-0">
            <h1 class="title">
              {{ blog.title }}
            </h1>
            <p class="caption">发布于 {{ blog.created_at }}</p>
          </div>
          <div class="el-col el-col-8 text-right">
            <can-create v-if="blog.provider !== username">
              <nuxt-link v-slot="{ navigate }" :to="localePath('/application/doc/' + blog.id + '/edit')" custom>
                <el-button type="primary" icon="el-icon-edit" @click="navigate" @keypress.enter="navigate">编辑</el-button>
              </nuxt-link>
            </can-create>
            <can-examine>
              <el-button type="danger" icon="el-icon-delete" @click="handleDeletePipe">删除</el-button>
            </can-examine>
          </div>
        </div>

        <div ref="markdown" v-html="markdown"></div>
      </el-col>

      <el-col style="width: 260px">
        <client-only>
          <markdown-toc :toc="toc"></markdown-toc>
        </client-only>
      </el-col>
    </el-row>
    <div v-else>文档找不到了！</div>
    <el-image v-if="imageList.length !== 0" ref="elImage" style="width: 0; height: 0" :src="currentImage" :preview-src-list="imageList"> </el-image>
  </div>
</template>

<script type="text/babel">
import MarkdownToc from '@/pages/support-center/_components/MarkdownToc'
import { resourceHelp } from '@/utils/resource-help'

export default {
  components: { MarkdownToc },
  async asyncData({ app, params }) {
    if (params.id) {
      const blog = await app.$axios.$get(`/v1/blog/${params.id}`)
      const { markdown, toc, imageList } = resourceHelp(blog.content)
      return { blog, markdown, toc, imageList }
    } else {
      return {}
    }
  },
  data() {
    return {
      markdown: undefined,
      toc: [],
      imageList: [],
      currentImage: undefined,
    }
  },
  // computed: {
  //   item() {
  //     return this.$store.state.pipe
  //   },
  // },
}
</script>

<style lang="scss">
// .item-tip {
// padding: 5px 0 0;
// background-color: #ffffff;
// color: #666666;
// }
.title {
  margin-bottom: 1px;
  font-weight: 600;
  font-size: 400px;
}

.caption {
  padding: 5px 0 0;
  background-color: #ffffff;
  color: #666666;
  font-size: 18px;
  line-height: 30.0001px;
  text-align: justify;
  letter-spacing: normal;
}
</style>
